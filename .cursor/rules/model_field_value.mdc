---
description: MasamuneフレームワークのModeFieldlValue抽出
globs: *.dart
---
# ModelFieldValue抽出

[katana_modelのsrc](mdc:flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/flutter_masamune/packages/katana_model/lib/src)にある`ModelFieldValue`を継承したクラスを抽出し`packages/katana_cli/lib/ai/docs/model_field_value/`以下にDartファイルを作成する。

下記に例として`ModelTimestamp`と`ModelCounter`にて生成するDartファイルを示す。

- `ModelTimestamp`
  
    ```dart
    // packages/katana_cli/lib/ai/docs/model_field_value/model_timestamp.dart

    import 'package:katana_cli/katana_cli.dart';

    /// Contents of model_timestamp.mdc.
    ///
    /// model_timestamp.mdcの中身。
    class ModelFieldValueModelTimestampMdcCliAiCode extends CliAiCode {
    /// Contents of model_timestamp.mdc.
    ///
    /// model_timestamp.mdcの中身。
    const ModelFieldValueModelTimestampMdcCliAiCode();

    @override
    String get name => "ModelTimestampの利用方法";

    @override
    String get description => "MasamuneフレームワークにおけるModelTimestampの利用方法";

    @override
    String get globs => "*.dart";

    @override
    String get directory => "docs/model_field_value";

    @override
    String body(String baseName, String className) {
        return r"""
    `ModelTimestamp`は下記のように利用する。

    ## 概要

    内部に`DateTime`を保持し日時を扱えるようにしながらJsonにパースしやすくしたオブジェクト。

    ## 作成方法

    - 現在日時を定義

        ```dart
        ModelTimestamp.now();
        ```

    - `DateTime`から変換

        ```dart
        ModelTimestamp(dateTime);
        ```

    - 日時を直接入力

        ```dart
        // 2000年1月1日10時15分30秒 100milliseconds 200microseconds 
        ModelTimestamp.dateTime(2000, 1, 1, 10, 15, 30, 100, 200);
        ```

    - 文字列からのパース（パースに失敗した場合Exceptionをスロー）

        ```dart
        ModelTimestamp.parse("2000-01-01 10:15:30");
        ```

    - 文字列からのパース（パースに失敗した場合nullを返す）

        ```dart
        ModelTimestamp.tryParse("2000-01-01 10:15:30");
        ```

    ## `DateTime`の取得

    ```dart
    final dateTime = modelTimestamp.value;
    ```

    ## その他メソッド

    - `ModelDate`への変換
        
        ```dart
        final modelDate = modelTimestamp.toModelDate();
        ```
    """;
    }
    ```

- `ModelCounter`
  
    ```dart
    // packages/katana_cli/lib/ai/docs/model_field_value/model_counter.dart

    import 'package:katana_cli/katana_cli.dart';

    /// Contents of model_counter.mdc.
    ///
    /// model_counter.mdcの中身。
    class ModelFieldValueModelCounterMdcCliAiCode extends CliAiCode {
        /// Contents of model_timestamp.mdc.
        ///
        /// model_timestamp.mdcの中身。
        const ModelFieldValueModelCounterMdcCliAiCode();

        @override
        String get name => "ModelCounterの利用方法";

        @override
        String get description => "MasamuneフレームワークにおけるModelCounterの利用方法";

        @override
        String get globs => "*.dart";

        @override
        String get directory => "docs/model_field_value";

        @override
        String body(String baseName, String className) {
            return r"""
        `ModelCounter`は下記のように利用する。

        ## 概要

        内部にintを保持し数字を扱えるようにしながら数字のインクリメントやデクリメントをサーバー側で行えるようにしたオブジェクト。

        ## 作成方法

        - 初期値を定義して定義

            ```dart
            ModelCounter(100);
            ```

        ## intの取得

        ```dart
        final number = modelCounter.value;
        ```

        ## その他メソッド

        - 数値の増減
            
            ```dart
            modelCounter.increment(5);
            modelCounter.increment(-4);
            ```

        - 増減する数値を取得
            
            ```dart
            final incrementValue = modelCounter.incrementValue;
            ```
    """;
    }
    ```